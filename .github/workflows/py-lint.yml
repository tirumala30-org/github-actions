name: Reusable workflow

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    inputs:
      workflow_id:
         required: true
         type: string
         description: "ID or filename of the workflow to get latest successful commit"
      files_to_match:
         description: "Check for changes using only this list of files or regex (Defaults to the entire repo)"
         required: true
         type: string   
         default: \.(py|pyc)$
    secrets:
      gh_token:
         required:  true
      gh_repo_read_token:
         required: true
         
jobs:
  changed_py_files_job:
   runs-on: ubuntu-latest
   outputs:
     changed_files: ${{ steps.changed-files.outputs.changed_files }}
     any_changed: ${{ steps.changed-files.outputs.any_changed }}
   
   steps:
   - uses: actions/checkout@v2
     with:
       fetch-depth: 0  
   - name: Checkout actions repo
     uses: actions/checkout@v2
     with:
       repository: saiteja-organization/test1
       path: test1
       ref: saiteja
       token: ${{ secrets.gh_token }}
   - name: Get changed tf files
     id: changed-files
     uses: ./test1/.github/actions/changed-files-since-last-success
     with:
       files_to_match: ${{ inputs.files_to_match }}
       github_token: ${{ secrets.gh_token }}
       workflow_id: ${{ inputs.workflow_id }}    
   
  pylint_job:
    runs-on: ubuntu-latest
    needs: changed_py_files_job
    if: needs.changed_py_files_job.outputs.any_changed == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Checkout actions repo
        uses: actions/checkout@v2
        with:
          repository: saiteja-organization/test1
          path: test1
          ref: saiteja
          token: ${{ secrets.gh_token }}
      - name: Check terraform lint rules
        id: check-py-lint
        uses: ./test1/.github/actions/pylint
        with:
          files: ${{ needs.changed_py_files_job.outputs.changed_files }} 
      
